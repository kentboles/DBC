Application	(WordPerfect;	"WordPerfect";	Default!;	"EN")
Call	(vConstants)
PosDocVeryTop	()
Type	("Num	oli	in	each	assm:"	+	vS1N)
HardReturn()
Type	("Oli	overlap:"+	vS1O)
HardReturn()
Type	("Length	of	olis:"	+vS1L)
HardReturn()
Type	("Length	of	oli	assmblies:"	+vS1AL)
HardReturn()
Type	("Number	of	cassettes:"	+vS2N)
HardReturn()
Type	("Overlap	twix	cassettes:"	+vS2O)
HardReturn()
Type	("Length	of	cassettes:"	+vS2L)
HardReturn()
Type	("Length	of	final	assembly:"	+vS2AL)
HardReturn()
HardReturn()
Type	("Assembled	cassettes	look	like...")
HardReturn()
HardReturn()
Declare	(vCass[vS2N])
For	(j;1;j<=vS2N;j+1)
If(j=vS2N)
vCass[j]=SubStr(vDoc;vStart;(StrLen	(vDoc))-vStart+1)
Else
vCass[j]=SubStr(vDoc;vStart;vS2L)
vStart=vEnd-vS2O+1
vEnd=vStart+vS2L-1
EndIf
Type(StrLen	(vCass[j]))
HardReturn()
12
If(j>=2)
vLeft=StrLeft	(vCass[j];vS2O)
vRight=StrRight	(vCass[j];(StrLen	(vCass[j]))-vS2O+1)
TextColor	(Red:	255;	Green:	0;	Blue:	128)
Type	(vLeft)
TextColor	(Red:	0;	Green:	0;	Blue:	0)
Type	(vRight)
Else
Type(vCass[j])
EndIf
HardReturn()
HardReturn()
EndFor
Type	("Oligos	grouped	by	cassette,	5'	to	3'	and	ready	to	order...")
HardReturn()
HardReturn()
For	(j;1;j<=vS2N;j+1)
Declare	(vOli[vS1N])
vOliStart=1
vOliEnd=vS1L
For	(i;1;i<=vS1N;i+1)
If(j=vS2N	AND	i=vS1N)
vOli[i]=SubStr(vCass[j];vOliStart;(StrLen	(vCass[j]))-vOliStart+1)
Else
vOli[i]=SubStr(vCass[j];vOliStart;vS1L)
vOliStart=vOliEnd-vS1O+1
vOliEnd=vOliStart+vS1L-1
EndIf
If(i	MOD	2	=	0)
vOli[i]:=	StrTransform	(vOli[i];	"A";	"H")
vOli[i]:=	StrTransform	(vOli[i];	"C";	"I")
vOli[i]:=	StrTransform	(vOli[i];	"G";	"C")
vOli[i]:=	StrTransform	(vOli[i];	"T";	"A")
vOli[i]:=	StrTransform	(vOli[i];	"H";	"T")
vOli[i]:=	StrTransform	(vOli[i];	"I";	"G")
vOli[i]:=	StrTransform	(vOli[i];	"a";	"h")
vOli[i]:=	StrTransform	(vOli[i];	"c";	"i")
vOli[i]:=	StrTransform	(vOli[i];	"g";	"c")
vOli[i]:=	StrTransform	(vOli[i];	"t";	"a")
vOli[i]:=	StrTransform	(vOli[i];	"h";	"t")
vOli[i]:=	StrTransform	(vOli[i];	"i";	"g")
vOli[i]:=	StrReverse	(vOli[i])
EndIf
Type(vOli[i])
HardReturn()
EndFor
13
HardReturn()
HardReturn()
Discard	(vOli[])
EndFor
Quit
Label(vConstants)
vDoc:=StrToChars(?GetSelTextAllEx	();Keep!;Alphabetic!)
vDoc=ToUpper	(vDoc)
vTargetL=	StrLen	(vDoc)
Declare	(vTable[10,9])
vOliMin=54
vOliMax=80
vOliMinNumber=8
vOliMaxNumber=14
vMinCassLap=40
vMaxCassLap=60
vPrompt="PLEASE	PICK	YOUR	CONSTRAINTS"
Repeat
//Start	Dialog	Box	Definition**********************
																									//Dialog	box	number;
																												//Control	string	(not	in	dialog	define);
																																	//Left;	Top;	Width;	Height;
DialogDefine	(99;450;100;150;200;OK!|Enter2HRtn!|Cancel!;"Two	Stage	Oligo	Assembly")
DialogAddGroupBox	(99;98;10;15;	40;	155;	"PLEASE	PICK	YOUR	CONSTRAINTS")
If(Exists(vCheckValues))
DialogAddText	(99;98;10;166;130;10;Center!	|ShadowBox!;"SOME	MIN	IS	LARGER	THAN	A	
MAX")
EndIf
DialogAddCounter(99;98;12;		40;	36;15;DisplayNormal!;vOliMin;40;80;2)
DialogAddText			(99;98;50;		43;100;10;Left!;"Min	length	for	an	oligo	(40)")
DialogAddCounter(99;98;12;		55;	36;15;DisplayNormal!;vOliMax;40;80;2)
DialogAddText			(99;98;50;		58;100;10;Left!;"MAX	length	for	an	oligo	(80)")
DialogAddCounter(99;98;12;		85;	36;15;DisplayNormal!;vOliMinNumber;2;24;2)
DialogAddText (99;98;50;		88;100;10;Left!;"Min	number	of	oligos	(2)")
DialogAddCounter(99;98;12;	100;	36;15;DisplayNormal!;vOliMaxNumber;2;24;2)
DialogAddText (99;98;50;	103;100;10;Left!;"MAX	number	of	oligos	(24)")
DialogAddCounter(99;98;12;	130;	36;15;DisplayNormal!;vMinCassLap;20;80;1)
DialogAddText (99;98;50;	133;100;10;Left!;"Min	cassette	overlap	(20)")
DialogAddCounter(99;98;12;	145;	36;15;DisplayNormal!;vMaxCassLap;20;80;1)
DialogAddText (99;98;50;	148;100;10;Left!;"MAX	cassette	overlap	(80)")
v99:=	DialogShow	(99;"WordPerfect";;)
14
v100:=	DialogDestroy(99)
If(v99=2)//Cancel	button	was	hit
Quit()
EndIf
If(vOliMin>vOliMax	OR	vOliMinNumber	>vOliMaxNumber	OR	vMinCassLap>vMaxCassLap)
Beep	()
vCheckValues="Stop"
Else
vCheckValues="Go"
Endif
Until	(vCheckValues="Go")
//End	Dialog	Box	Definition***********************
For	(vS1N;vOliMinNumber;vS1N<=vOliMaxNumber;vS1N+2)
For	(vS1L;vOliMin;vS1L<=vOliMax;vS1L+2)
For	(vS2O;vMinCassLap;vS2O<=vMaxCassLap;vS2O+1)
vS1O=Integer(vS1L/2)
vS1AL=Integer((vS1N*vS1L)-((vS1N-1)*vS1O))
vS2L=vS1AL
If(vS2L<=vS2O)
break
Else
vS2N=Integer((vTargetL- vS2O)	/	(vS2L-vS2O))
vS2N2=vS2N+1
EndIf
vS2AL=Integer((vS2N*vS2L)-((vS2N-1)*vS2O))
vS2AL2=Integer((vS2N2*vS2L)-((vS2N2-1)*vS2O))
vS2ND =	Integer(SquareRoot((vTargetL-vS2AL)**2))
vS2ND2=Integer(SquareRoot((vTargetL-vS2AL2)**2))
If(vS2ND2<vS2ND)
vS2N=vS2N2
vS2AL=vS2AL2
vS2ND=vS2ND2
EndIf
For	(i;1;i<=10;i+1)
If(Not	Exists(vTable[i,1]))
vTable[1,1]=vS1N
vTable[1,2]=vS1O
vTable[1,3]=vS1L
vTable[1,4]=vS1AL
vTable[1,5]=vS2N
vTable[1,6]=vS2ND
vTable[1,7]=vS2O
vTable[1,8]=vS2L
vTable[1,9]=vS2AL
Break
Else
15
If(vS2ND<=vTable[i,6])
For	(j;10;j>i;j-1)
If(Exists(vTable[j-1,1]))
vTable[j,1]=vTable[j-1,1]
vTable[j,2]=vTable[j-1,2]
vTable[j,3]=vTable[j-1,3]
vTable[j,4]=vTable[j-1,4]
vTable[j,5]=vTable[j-1,5]
vTable[j,6]=vTable[j-1,6]
vTable[j,7]=vTable[j-1,7]
vTable[j,8]=vTable[j-1,8]
vTable[j,9]=vTable[j-1,9]
EndIf
EndFor
vTable[i,1]=vS1N
vTable[i,2]=vS1O
vTable[i,3]=vS1L
vTable[i,4]=vS1AL
vTable[i,5]=vS2N
vTable[i,6]=vS2ND
vTable[i,7]=vS2O
vTable[i,8]=vS2L
vTable[i,9]=vS2AL
Break
EndIf
EndIf
EndFor
EndFor
EndFor
EndFor
//Left	Top	Width	Height
DialogDefine	("vMenu";50;100;1000;160;OK!|Enter2HRtn!|Cancel!;"Oligo	Assembly")
DialogAddText	("vMenu";"x";200;0;600;13;Center!	|	ShadowBox!;
"PICK	THE	ASSEMBLY	YOU	WOULD	LIKE	TO	USE	TARGET	SIZE:			"	+	vTargetL	+
":				EXTRA	NUCS	WILL	BE	ADDED	OR	REMOVED	FROM	THE	LAST	OLIGO	IF	NEEDED")
DialogAddGroupBox	("vMenu";"y";10;15;	30;	120;	"	")
Declare	(v1[10])
DialogAddRadioButton	("vMenu";"y";20;21;10;9;"	";v1[1];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;32;10;9;"	";v1[2];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;43;10;9;"	";v1[3];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;54;10;9;"	";v1[4];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;65;10;9;"	";v1[5];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;76;10;9;"	";v1[6];RadioAuto!)
DialogAddRadioButton ("vMenu";"y";20;87;10;9;"	";v1[7];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;98;10;9;"	";v1[8];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;109;10;9;"	";v1[9];RadioAuto!)
DialogAddRadioButton	("vMenu";"y";20;120;10;9;"	";v1[10];RadioAuto!)
For	(i;1;i<=10;i+1)
16
If(Exists(vTable[i,1]))
DialogAddText	("vMenu";"x";50;i*11+10;100;9;Left!;"Num	oli	in	each	assm:"	+	vTable[i,1])
DialogAddText	("vMenu";"x";160;i*11+10;100;9;Left!;"Oli	overlap:"+	vTable[i,2])
DialogAddText	("vMenu";"x";270;i*11+10;100;9;Left!;"Length	of	olis:"	+vTable[i,3])
DialogAddText	("vMenu";"x";380;i*11+10;100;9;Left!;"Length	of	oli	assmblies:"	+vTable[i,4])
DialogAddText	("vMenu";"x";490;i*11+10;100;9;Left!;"Number	of	cassettes:"	+vTable[i,5])
DialogAddText	("vMenu";"x";600;i*11+10;100;9;Left!;"Overlap	twix	cassettes:"	+vTable[i,7])
DialogAddText	("vMenu";"x";710;i*11+10;100;9;Left!;"Length	of	cassettes:"	+vTable[i,8])
DialogAddText	("vMenu";"x";820;i*11+10;100;9;Left!;"Length	of	final	assembly:"	+vTable[i,9])
EndIf
EndFor
v099:=	DialogShow	("vMenu";"WordPerfect";;)
v100:=	DialogDestroy(Dialog:	"vMenu")
If(v099=2)//Cancel	button	was	hit
Quit()
EndIf
For	(i;1;i<=10;i+1)
If(v1[i]=1)
vS1N=vTable[i,1]
vS1O=vTable[i,2]
vS1L=vTable[i,3]
vS1AL=vTable[i,4]
vS2N=vTable[i,5]
vS2ND=vTable[i,6]
vS2O=vTable[i,7]
vS2L=vTable[i,8]
vS2AL=vTable[i,9]
Break
EndIf
EndFor
vLong=vTargetL
vStart=1
vEnd=vS2L
FileNew	()
StyleEditBegin	(Style:	DocStyle!;	Library:	CurrentDoc!)
StyleCodes (State:	WithoutOffCodes!;	Library:	CurrentDoc!)
Font	(Name:	"Courier	New	";	Family:	14593;	Attributes:	FontMatchNormal!;	Weight:	90;	
Width:	WidthUnknown!;	Source:	DRSFile!;	Type:	TrueType!;	CharacterSet:	FontMatchASCII!)
FontSize	(FontSize:	0.138")
PaperSizeSelect	(Name:	"Letter";	Width:	8.5";	Height:	11.0";	Type:	Standard!;	Orientation:	
Landscape!)
SubstructureExit	()
StyleEditEnd	(State:	Save!)
Return